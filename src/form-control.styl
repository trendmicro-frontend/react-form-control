@import "reset-context";
@import "variables";

.form-control {
    reset-context();

    display: block;
    width: 100%;
    font-weight: $input-font-weight;
    color: $input-color;
    background-color: $input-background-color;
    background-clip: padding-box;
    border: $input-border-width solid $input-border-color;
    border-radius: 0;

    if ($enable-transitions) {
        transition: $input-transition;
    }

    // Unstyle the caret on `<select>`s in IE10+.
    &::-ms-expand {
        background-color: transparent;
        border: 0;
    }

    &:focus {
        background-color: $input-focus-background-color;
        border-color: $input-focus-border-color;
        border-width: $input-focus-border-width;
        color: $input-focus-color;
        outline: 0;
    }

    // Placeholder
    &::placeholder {
        color: $input-placeholder-color;
        // Override Firefox's unusual default opacity.
        opacity: 1;
    }

    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &:disabled,
    &[readonly] {
        background-color: $input-disabled-background-color;
        cursor: not-allowed;
        // iOS fix for unreadable disabled content.
        opacity: .5;
    }
}

.form-control-lg {
    height: $input-height-lg;
    padding: $input-padding-y-lg $input-padding-x-lg;
    font-size: $input-font-size-lg;
    line-height: $input-line-height-lg;

    if ($enable-rounded) {
        border-radius: $input-border-radius-lg;
    }
}

.form-control-md {
    height: $input-height-md;
    padding: $input-padding-y-md $input-padding-x-md;
    font-size: $input-font-size-md;
    line-height: $input-line-height-md;

    if ($enable-rounded) {
        border-radius: $input-border-radius-md;
    }
}

.form-control-sm {
    height: $input-height-sm;
    padding: $input-padding-y-sm $input-padding-x-sm;
    font-size: $input-font-size-sm;
    line-height: $input-line-height-sm;

    if ($enable-rounded) {
        border-radius: $input-border-radius-sm;
    }
}

.form-control-xs {
    height: $input-height-xs;
    padding: $input-padding-y-xs $input-padding-x-xs;
    font-size: $input-font-size-xs;
    line-height: $input-line-height-xs;

    if ($enable-rounded) {
        border-radius: $input-border-radius-xs;
    }
}
